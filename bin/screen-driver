#!/usr/bin/env ruby
################################################################################
require 'optparse'
require 'rubygems'
require 'highline/import'

################################################################################
class Sessions
  
  ##############################################################################
  def initialize
    @sessions = {}
    @new = nil
    @source = nil
    
    parse_args
  end
  
  ##############################################################################
  def sessions
    @sessions.clear

    open("|screen -ls") do |io|
      io.each do |line|
        if m = line.match(/(\d+\.\w+)/)
          @sessions[m[1].sub(/^\d+\./, '')] = m[1]
        end
      end
    end
    
    @sessions
  end

  ##############################################################################
  def start (name)
    ENV['SCREEN_SESSION_NAME'] = name

    if @source and File.exist?(File.expand_path("~/.screen/#{@source}"))
      ENV['SCREEN_SOURCE'] = File.expand_path("~/.screen/#{@source}")
    elsif File.exist?(File.expand_path("~/.screen/#{name}"))
      ENV['SCREEN_SOURCE'] = File.expand_path("~/.screen/#{name}")
    else
      ENV['SCREEN_SOURCE'] = File.expand_path("~/.screen/default")
    end

    if @sessions.has_key?(name)
      system('screen', '-x', @sessions[name])
    else
      system('screen', '-S', name)
    end
  end
  
  ##############################################################################
  def run
    start(@new) if @new

    loop do
      system('clear')

      session = choose do |menu|
        menu.prompt = "Select a screen session: "
        menu.choices(*sessions.keys.sort)
        menu.first_answer = ARGV.first
        ARGV.clear
      end
      
      start(session)
    end
  rescue EOFError => e
    exit
  end
  
  ##############################################################################
  private
  
  ##############################################################################
  def parse_args
    OptionParser.new do |parser|
      parser.banner = "Usage: #{File.basename(__FILE__)} [options] [name]"
      parser.on('-n', '--new=NAME',  "Create a new screen session") {|n| @new = n}
      parser.on('-l', '--load=NAME', "Tell screen to load the NAME file") {|f| @source = f}
      parser.parse!
    end
  end
end

################################################################################
sessions = Sessions.new
sessions.run
