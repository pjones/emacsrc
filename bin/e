#!/usr/bin/env bash

################################################################################
# A very simple wrapper around emacsclient.
set -eu
set -o pipefail

################################################################################
option_server_name="server"
option_server_path="$HOME/.cache/emacs/server/"
option_fresh=0
option_wait=0
option_emacs_opts=()

################################################################################
# Extra path entries for dependencies (wmctrl, nc, etc)
export PATH=@path@:$PATH

################################################################################
# See if we can get the name of the server from the current workspace.
if [ -n "$DISPLAY" ] && type wmctrl &>/dev/null && wmctrl -d &>/dev/null; then
  option_server_name=$(wmctrl -d | awk '$2 == "*" { print $9 }')
fi

################################################################################
usage() {
  cat <<EOF
Usage: e [options] [file] -- [emacsclient options]

  -c      Open a new frame
  -f      Force a fresh Emacs to be started
  -h      This message
  -s NAME Connect to server NAME [$option_server_name]
  -t      Open a new TTY
  -w      Wait for Emacs to finish with the file
EOF
}

################################################################################
# Is the selected Emacs daemon alive?
alive() {
  path="${option_server_path}${option_server_name}"

  # Does the server file exist?
  if [ ! -e "$path" ]; then
    return 1
  fi

  # Can we connect to the server?
  port=$(head -1 "$path" | sed -E 's/^.*:([[:digit:]]+).*/\1/')

  if ! nc -N 127.0.0.1 "$port" </dev/null; then
    rm -f "$path" # Server is dead, delete the file.
    return 1
  fi
}

################################################################################
while getopts "cfhs:tw" o; do
  case "${o}" in
  c)
    option_emacs_opts+=("--create-frame")
    ;;

  f)
    option_fresh=1
    ;;

  h)
    usage
    exit
    ;;

  s)
    option_server_name=$OPTARG
    ;;

  t)
    option_emacs_opts+=("--tty")
    ;;

  w)
    option_wait=1
    ;;

  *)
    exit 1
    ;;
  esac
done

shift $((OPTIND - 1))

################################################################################
if [ "$option_fresh" -eq 1 ]; then
  export EMACSLOADPATH=""
  exec emacs -q \
    --eval "(toggle-debug-on-error)" \
    --load @out@/dot.emacs.el \
    --eval "(run-hooks 'after-init-hook)" "$@"
fi

################################################################################
if ! alive; then
  emacs --daemon="$option_server_name"
fi

################################################################################
if [ "$option_wait" -eq 0 ]; then
  option_emacs_opts+=("--no-wait")
fi

emacsclient --server-file="${option_server_path}${option_server_name}" \
  "${option_emacs_opts[@]}" "$@"
