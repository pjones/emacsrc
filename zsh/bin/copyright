#!/usr/bin/env ruby

################################################################################
class Copyrighting

  ##############################################################################
  FILE_MAPPING = {
    /ruby|shell\s+script|perl/  => :shell,
  }

  ##############################################################################
  EXT_MAPPING = {
    /\.(?:rb|pl|sh)$/ => :shell,
  }

  ##############################################################################
  def initialize
    @prepared_notices = {}
  end
  
  ################################################################################
  def process_file (file)
    type = `file #{file}`

    FILE_MAPPING.each do |k,v|
      if type.match(k)
        update_file(file, v)
        return
      end
    end

    EXT_MAPPING.each do |k,v|
      if file.match(k)
        update_file(file, v)
        return
      end
    end
  end

  ################################################################################
  def process_directory (dir)
    Dir.foreach(dir) do |file|
      next if file.match(/^\./)

      full_name = File.join(dir, file)

      if File.directory?(full_name)
        process_directory(full_name)
      else
        process_file(full_name)
      end
    end
  end

  ##############################################################################
  private

  ##############################################################################
  def copyright_line (current="")
    prefix = ""
    
    if m = current.match(/\(C\)\s+(\d+)/)
      prefix = "#{m[1]}-"
    end

    "Copyright (C) #{prefix}#{Time.now.year} pmade inc. (Peter Jones pjones@pmade.com)"
  end

  ################################################################################
  def prepare_notice (style)
    return @prepared_notices[style] if @prepared_notices.has_key?(style)

    data = DATA.readlines.map{|line| line.chomp}

    case style
    when :shell
      data.map {|line| line.insert(0, '# ')}
      data.insert(0, '#' * 80, '#', "# #{copyright_line}", "#")
      data << "#"
      data << "#" * 80
    end

    @prepared_notices[style] = data
  end

  ################################################################################
  def update_file (file, style)
    puts "processing file #{file} as #{style} style"
    data = File.read(file)

    if m = data.match(/Copyright\s+\(C\)[^\n]+/m)
      data.sub!(/Copyright\s+\(C\)[^\n]+/m, copyright_line(m[0]))
    else
      copyright = prepare_notice(style)

      case style
      when :shell
        data = data.split(/\n/)
        data.insert((data[0].match(/^#!/) ? 1 : 0), *copyright)
        data = data.join("\n") + "\n"
      end
    end
      
    File.open(file, 'w') {|f| f << data}
  end
end

################################################################################
c = Copyrighting.new

if ARGV.empty?
  c.process_directory('.')
else
  ARGV.each do |clo|
    File.directory?(clo) ? c.process_directory(clo) : c.process_file(clo)
  end
end

__END__
Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the
"Software"), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
